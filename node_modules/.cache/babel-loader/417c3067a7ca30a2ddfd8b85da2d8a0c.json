{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport classNames from 'classnames';\nimport TooltipPopoverWrapper, { propTypes } from './TooltipPopoverWrapper';\nimport { addDefaultProps } from './utils';\nvar defaultProps = {\n  placement: 'top',\n  autohide: true,\n  placementPrefix: 'bs-tooltip',\n  trigger: 'hover focus'\n};\nfunction Tooltip(props) {\n  var arrowClasses = classNames('tooltip-arrow', props.arrowClassName);\n  var popperClasses = classNames('tooltip', 'show', props.popperClassName);\n  var classes = classNames('tooltip-inner', props.innerClassName);\n  var _props = addDefaultProps(defaultProps, props);\n  return /*#__PURE__*/React.createElement(TooltipPopoverWrapper, _extends({}, _props, {\n    arrowClassName: arrowClasses,\n    popperClassName: popperClasses,\n    innerClassName: classes\n  }));\n}\nTooltip.propTypes = propTypes;\nexport default Tooltip;","map":null,"metadata":{},"sourceType":"module"}